@{
    Layout = "~/Views/Shared/_LayoutAdminPanal.cshtml";
    Page.Title = "Personal Information";
}
@using HUTOPS.Models
@model PersonalInfoPageModel
<style>

    .styled-checkbox {
        display: none;
    }

        .styled-checkbox + .checkbox-label:before {
            content: '\2713'; /* Checkmark symbol */
            display: inline-block;
            vertical-align: middle;
            margin-right: 5px;
            font-size: 18px;
            color: #333;
            border: 1px solid #333;
            width: 20px;
            height: 20px;
            text-align: center;
            line-height: 18px;
            cursor: pointer;
            border-radius: 4px;
        }

        /* Style the custom checkbox when checked */
        .styled-checkbox:checked + .checkbox-label:before {
            background-color: #333;
            color: white;
        }

        /* Hover effect for the custom checkbox */
        .styled-checkbox {
            background-color: #f0f0f0;
            color: #333;
        }

        /* Focus effect for the custom checkbox */
        .styled-checkbox:focus + .checkbox-label:before {
            box-shadow: 0 0 0 2px rgba(0, 123, 255, 0.5);
        }
</style>
<div class="container-fluid">
    <div class="boxWraper infoBox">
        <div class="headBox">
            <h2>Personal Information</h2>
        </div>
        <form id="mainForm" method="post">
            @Html.AntiForgeryToken()
            <div class="row">
                <div class="col-lg-4">
                    <div class="form-group">
                        <label for="firstName">First Name:</label>
                        <input class="form-control" type="text" id="firstName" name="FirstName" maxlength="25" value="@Model.Main.FirstName" oninput="validateText(this); validateName(this.id,'errFirstName')" required>
                        @Html.ValidationMessageFor(model => model.Main.FirstName, "", new { @class = "text-danger" , id = "errFirstName"})
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <label for="middleName">Middle Name:</label>
                        <input class="form-control" type="text" id="middleName" name="MiddleName" maxlength="25" oninput="validateText(this);" value="@Model.Main.MiddleName">
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <label for="lastName">Last Name:</label>
                        <input class="form-control" type="text" id="lastName" name="LastName" maxlength="25" oninput="validateText(this); validateName(this.id,'errLastName')" value="@Model.Main.LastName" required>
                        @Html.ValidationMessageFor(model => model.Main.LastName, "", new { @class = "text-danger", id = "errLastName" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-4">
                    <div class="form-group">
                        <label for="fatherFirstName">Father's First Name:</label>
                        <input class="form-control" type="text" id="fatherFirstName" maxlength="25" name="FatherFirstName" oninput="validateText(this); validateName(this.id,'errFatherFName')" value="@Model.Main.FatherFirstName" required>
                        @Html.ValidationMessageFor(model => model.Main.FatherFirstName, "", new { @class = "text-danger", id="errFatherFName" })
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <label for="fatherMiddleName">Father's Middle Name:</label>
                        <input class="form-control" type="text" id="fatherMiddleName" maxlength="25" name="FatherMiddleName" oninput="validateText(this);" value="@Model.Main.FatherMiddleName">
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <label for="fatherLastName">Father's Last Name:</label>
                        <input class="form-control" type="text" id="fatherLastName" maxlength="25" name="FatherLastName" oninput="validateText(this); validateName(this.id,'errFatherLName')" value="@Model.Main.FatherLastName" required>
                        @Html.ValidationMessageFor(model => model.Main.FatherLastName, "", new { @class = "text-danger", id = "errFatherLName" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-4">
                    <div class="form-group">
                        <label for="cnic">CNIC:</label>
                        <input class="form-control cnic" type="text" id="cnic" name="CNIC" placeholder="12345-1234567-1" maxlength="15" value="@Model.Main.CNIC" readonly>
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <label for="email">Email Address:</label>
                        <input class="form-control" type="email" id="email" name="EmailAddress" maxlength="25" value="@Model.Main.EmailAddress" readonly>
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <label for="altEmail">Alternate Email Address:</label>
                        <input class="form-control" type="email" id="altEmail" name="AlterEmailAddress" maxlength="30" value="@Model.Main.AlterEmailAddress" oninput="validateEmail(this.id,'errAltEmail');">
                        @Html.ValidationMessageFor(model => model.Main.AlterEmailAddress, "", new { @class = "text-danger", id = "errAltEmail" })

                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-6">
                    <div class="form-group">
                        <label>Gender:</label>
                        <select id="gender" name="Gender" class="custom-select" onchange="toggleFieldInput(this.id,'F','divHusband');" required>
                            <option value="">Select Gender</option>
                            <option value="M">Male</option>
                            <option value="F">Female</option>
                            <option value="T">Prefer not to self-identify</option>
                        </select>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="form-group" id="divHusband" style="display:none;">
                        <label for="husbandName">Husband's Name:</label>
                        <input class="form-control" type="text" id="husbandName" maxlength="25" name="HusbandName">
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-2">
                    <div class="form-group">
                        <label for="dob">Date of Birth:</label>
                        <input type="date" class="form-control" id="dob" name="DateOfBirth" />
                    </div>
                </div>
            </div>
                
        <!-- Contact Details Section -->
        <div class="headBox">
            <h2>Contact Details</h2>
        </div>
        @*<form action="#" method="post">*@
            <div class="row">
                <div class="col-lg-12">
                    <div class="form-group">
                        <label for="cellPhone">Cell Phone Number:</label>
                        <input class="form-control number" type="tel" id="cellPhone" name="CellPhoneNumber" placeholder="0333-3333333" maxlength="15" value="@Model.Main.CellPhoneNumber" readonly>
                        @Html.ValidationMessageFor(model => model.Main.CellPhoneNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-12">
                    <input type="checkbox" id="differentNumbers" class="styled-checkbox" name="differentNumbers" onclick="toggleFormSection('WhatsAppSection','differentNumbers')">
                    <label for="differentNumbers" class="checkbox-label" style="width: 75%;">Check if WhatsApp number is different from primary mobile number</label>
                    <br /><br />
                </div>
            </div>
            <div class="row">
                <div class="col-lg-4" >
                    <div id="WhatsAppSection" style="display: none;">
                        <div class="form-group">
                            <label for="whatsappNumber ">WhatsApp Number:</label>
                            <input class="form-control number" type="tel" id="whatsappNumber" name="WhatsAppNumber" value="@Model.Main.WhatsAppNumber" maxlength="15" placeholder="0333-3333333">
                            @Html.ValidationMessageFor(model => model.Main.WhatsAppNumber, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <label for="altCellPhone">Alternate Cell Phone Number:</label>
                        <input class="form-control number" type="tel" id="altCellPhone" name="AlternateCellPhoneNumber" maxlength="15"  value="@Model.Main.AlternateCellPhoneNumber" placeholder="0333-3333333">
                        @Html.ValidationMessageFor(model => model.Main.AlternateCellPhoneNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <label for="homePhone">Home Phone Number:</label>
                        <input class="form-control" type="tel" id="homePhone" name="HomePhoneNumber" value="@Model.Main.HomePhoneNumber" oninput="validateNumber(this)" placeholder="1234567890" maxlength="15" required>
                        @Html.ValidationMessageFor(model => model.Main.HomePhoneNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-lg-4">
                    <div class="form-group">
                        <label for="altLandline">Alternate Landline Number:</label>
                        <input class="form-control" type="tel" id="altLandline" name="AlternateLandline"  value="@Model.Main.AlternateLandline" oninput="validateNumber(this)" maxlength="15" placeholder="1234567890">
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <label for="guardianCellPhone">Guardian Cell Phone Number:</label>
                        <input class="form-control number" type="tel" id="guardianCellPhone" name="GuardianCellPhoneNumber"  maxlength="15" value="@Model.Main.GuardianCellPhoneNumber" placeholder="1234567890" required>
                        @Html.ValidationMessageFor(model => model.Main.GuardianCellPhoneNumber, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-lg-4">
                    <div class="form-group">
                        <label for="guardianEmail">Guardian Email Address:</label>
                        <input class="form-control" type="email" id="guardianEmail" name="GuardianEmailAddress" value="@Model.Main.GuardianEmailAddress" oninput="validateEmail(this.id,'errGuardianEmail')" required>
                        @Html.ValidationMessageFor(model => model.Main.GuardianEmailAddress, "", new { @class = "text-danger", id = "errGuardianEmail" })
                    </div>
                </div>
            </div>
            
                <div class="row">
                    <div class="col-lg-12">
                        <div class="form-group">
                            <label for="residentialAddress">Residential Address:</label>
                                <textarea class="form-control" id="residentialAddress" name="ResidentialAddress" rows="2" cols="100" maxlength="100"required></textarea><br><br>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-4">
                        <div class="form-group">
                            <label for="residentialCountry">Select Country:</label>
                            @*@Html.DropDownList("ResidentialCountry",(IEnumerable<SelectListItem>)ViewBag.Country, "--Please Select--", new { @class = "form-control", @id = "residentialCountry" })*@
                        <select class="form-control" id="residentialCountry" name="ResidentialCountry" onchange="updateProvince(this.id,'residentialProvince');" required>
                            <option value="">Select Country</option>
                            @foreach (var item in Model.Country)
                            {
                                if (item.Name == Model.Main.ResidentialCountry)
                                {
                                    <option value="@item.Id" selected>@item.Name</option>
                                }
                                else
                                {
                                <option value="@item.Id">@item.Name</option>
                                }
                            }
                        </select>
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="form-group">
                            <label for="residentialProvince">Select Province/State:</label>
                            @*@Html.DropDownList("ResidentialProvince", (IEnumerable<SelectListItem>)ViewBag.Province, "--Please Select--", new { @class = "form-control", @id = "residentialProvince" })*@
                        <select class="form-control" id="residentialProvince" name="ResidentialProvince" onchange="updateCities(this.id,'residentialCity');" required>
                            <option value="">Select Provience</option>
                            @foreach (var item in Model.Province)
                            {
                                if (item.Name == Model.Main.ResidentialProvince)
                                {
                                    <option value="@item.Id" selected>@item.Name</option>
                                }
                                else
                                {
                                <option value="@item.Id">@item.Name</option>
                                }
                            }
                        </select>
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="form-group">
                            <label for="residentialCity">City:</label>
                            @*@Html.DropDownList("ResidentialCity", (IEnumerable<SelectListItem>)ViewBag.City, "--Please Select--", new { @class = "form-control", @id = "residentialCity" })*@

                        <select class="form-control" id="residentialCity" name="ResidentialCity" onchange="toggleOtherCityInput(this.id,'divResidentialCityOther')" required>
                            <option value="">Select City</option>
                            @foreach (var item in Model.City)
                            {
                                if (item.Name == Model.Main.ResidentialCity)
                                {
                                    <option value="@item.Id" selected>@item.Name</option>
                                }
                                else
                                {
                                    <option value="@item.Id">@item.Name</option>
                                }

                            }
                            <option value="other">Other</option>
                        </select>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-4">
                        <div class="form-group" id="divResidentialCityOther" style="display: none;">
                            <label for="residentialCityOther">Other City:</label>
                                <input class="form-control" type="text" id="residentialCityOther" name="ResidentialCityOther" ><br><br>
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <div class="form-group">
                            <label for="residentialPostalCode">Residential Postal Code:</label>
                                <input class="form-control" type="text" id="residentialPostalCode" oninput="validateNumber(this)" name="ResidentialPostalCode" required><br><br>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-12">
                        <input type="checkbox" class="styled-checkbox" id="permanentDifferent" onclick="toggleFormSection('permanentForm', 'permanentDifferent');">
                        <label class="checkbox-label" for="permanentDifferent" style="width:75%;">Check the box if your permanent residential address is different from your Residential address:</label>
                    </div>
                </div>

                <div id="permanentForm" style="display: none;">
                    <div class="row">
                        <div class="col-lg-12">
                            <div class="form-group">
                                <label for="permanentAddress">Permanent Address:</label>
                                <textarea class="form-control" id="permanentAddress" name="PermanentAddress" rows="2" cols="50" maxlength="100"></textarea><br><br>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-4">
                            <div class="form-group">
                                <label for="permanentCountry">Select Country:</label>
                                @*@Html.DropDownList("PermanentCountry", (IEnumerable<SelectListItem>)ViewBag.Country, "--Please Select--", new { @class = "form-control", @id = "permanentCountry" })*@

                            <select class="form-control" id="permanentCountry" name="PermanentCountry" onchange="updateProvince(this.id,'permanentProvince');">
                                <option value="">Select Country</option>
                                @foreach (var item in Model.Country)
                                {
                                    if (item.Name == Model.Main.PermanentCountry)
                                    {
                                        <option value="@item.Id" selected>@item.Name</option>
                                    }
                                    else
                                    {
                                    <option value="@item.Id">@item.Name</option>
                                    }
                                }
                            </select>
                            </div>
                        </div>
                        <div class="col-lg-4">

                            <div class="form-group">
                                <label for="permanentProvince">Select Province/State:</label>
                                @*@Html.DropDownList("PermanentProvince", (IEnumerable<SelectListItem>)ViewBag.Province, "--Please Select--", new { @class = "form-control", @id = "permanentProvince" })*@
                            <select class="form-control" id="permanentProvince" name="PermanentProvince" onchange="updateCities(this.id,'permanentCity');">
                                <option value="">Select Provience</option>
                                @foreach(var item in Model.Province)
                                {
                                    if (item.Name == Model.Main.PermanentProvince)
                                    {
                                        <option value="@item.Id" selected>@item.Name</option>
                                    }
                                    else
                                    {
                                    <option value="@item.Id">@item.Name</option>
                                    }
                                }
                            </select>
                            </div>
                        </div>
                        <div class="col-lg-4">
                            <div class="form-group">
                                <label for="permanentCity">City:</label>
                                @*@Html.DropDownList("PermanentCity", (IEnumerable<SelectListItem>)ViewBag.City, "--Please Select--", new { @class = "form-control", @id = "permanentCity" })*@
                            <select class="form-control" id="permanentCity" name="PermanentCity" onchange="toggleOtherCityInput(this.id,'divPermanentCityOther')">
                                <option value="">Select City</option>
                                @foreach (var item in Model.City)
                                {
                                    if (item.Name == Model.Main.PermanentCity)
                                    {
                                        <option value="@item.Id" selected>@item.Name</option>
                                    }
                                    else
                                    {
                                        <option value="@item.Id">@item.Name</option>
                                    }
                                }
                                <option value="other">Other</option>
                            </select>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-4">
                            <div class="form-group" id="divPermanentCityOther">
                                <label for="permanentCityOther">Other City:</label>
                                <input class="form-control" type="text" id="permanentCityOther" name="PermanentCityOther" style="display: none;"><br><br>
                            </div>
                        </div>
                        <div class="col-lg-4">
                            <div class="form-group">
                                <label for="permanentPostalCode">Permanent Postal Code:</label>
                                <input class="form-control" type="text" id="permanentPostalCode" oninput="validateNumber(this)" name="PermanentPostalCode">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-12">

                        <input class="savebtn global-btn-purple  float-right" type="submit" value="Submit">
                        <input class="savebtn global-btn-purple  float-right" type="button" onclick="Save()" value="Save">
                    </div>
                </div>
            </form>


    </div>
</div>








<script>
        if ('@ViewBag.Result' !== "")
        {
            ShowDivError('@ViewBag.Result');
        }
        LoadPersonalData_Combo()
        function LoadPersonalData_Combo() {
        $('#gender').val('@Model.Main.Gender');
        $('#gender').trigger('change');

        var date = new Date('@Model.Main.DateOfBirth');
        var day = date.getDate().toString().padStart(2, '0');
        var month = (date.getMonth() + 1).toString().padStart(2, '0');
        var year = date.getFullYear();
        var dob = year + '-' + month + '-' + day;
        $('#dob').val(dob);
        $('#residentialAddress').val('@Model.Main.ResidentialAddress');
        $('#residentialPostalCode').val('@Model.Main.ResidentialPostalCode');

        $('#permanentAddress').val('@Model.Main.PermanentAddress');
       
        $('#permanentCityOther').val('@Model.Main.PermanentCityOther');
        $('#permanentPostalCode').val('@Model.Main.PermanentPostalCode');
    }


    function UpdateDate() {
        $('#DateOfBirth').val($('#dobYear').val() + "-" + $('#dobMonth').val() + "-" + $('#dobDay').val());
    }
    function Save() {
        // Create a new Date object using the selected values
        var param = {
            firstName: $('#firstName').val(),
            middleName: $('#middleName').val(),
            lastName: $('#lastName').val(),
            fatherFirstName: $('#fatherFirstName').val(),
            fatherMiddleName: $('#fatherMiddleName').val(),
            fatherLastName: $('#fatherLastName').val(),
            cnic: $('#cnic').val(),
            emailAddress: $('#email').val(),
            alterEmailAddress: $('#altEmail').val(),
            gender: document.getElementById("gender").value,
            husbandName: $('#husbandName').val(),
            dateofBirth: $('#dob').val(),
            // Contact Info
            cellPhoneNumber: $('#cellPhone').val(),
            whatsAppNumber: $('#whatsappNumber').val(),
            alternateCellPhoneNumber: $('#altCellPhone').val(),
            homePhoneNumber: $('#homePhone').val(),
            alternateLandline: $('#altLandline').val(),
            guardianCellPhoneNumber: $('#guardianCellPhone').val(),
            guardianEmailAddress: $('#guardianEmail').val(),
            // Address info
            residentialAddress: $('#residentialAddress').val(),
            residentialCountry: $('#residentialCountry').val(),
            residentialProvince: $('#residentialProvince').val(),
            residentialCity: $('#residentialCity').val(),
            residentialCityOther: $('#residentialCityOther').val(),
            residentialPostalCode: $('#residentialPostalCode').val(),

            permanentAddress: $('#permanentAddress').val(),
            permanentCountry: $('#permanentCountry').val(),
            permanentProvince: $('#permanentProvince').val(),
            permanentCity: $('#permanentCity').val(),
            permanentCityOther: $('#permanentCityOther').val(),
            permanentPostalCode: $('#permanentPostalCode').val(),


        };

        CallAsyncService('/Home/Save', JSON.stringify(param), editSaveCallback);

        function editSaveCallback(response) {
            if (response.status) {
                ShowDivSuccess(response.message)
            }
            else {
                ShowDivError(response.message)
            }
        }

    }


</script>
