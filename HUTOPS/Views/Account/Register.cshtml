@model HUTOPS.PersonalInformation
@{
    Layout = "~/Views/Shared/_loginLayout.cshtml";
}
<div class="container-fluid" style="width:85%;">
    <div class="boxWraper infoBox">
        <section class="signInWrap">
            <div class="container-fluid p-0">
                <div class="row m-0">
                    @*<div class="col-lg-6 p-0 none991">
                            <div class="imgWrap">
                                <img src="~/Content/img/image-content.jpg" alt="Alternate Text" />
                            </div>
                        </div>*@
                    <div class="col-lg-12 p-2">
                        <div class="contentWrap">
                            <img src="~/Content/img/mct-logo.svg" alt="Alternate Text" />
                            <h1>Testimony for student diverse interest, talent and skills !</h1>
                            <p>A purpose-built digital platform to collect, verify and report student meta-curricular experience during their tenure at Habib University.</p>
                            <form method="post" id="registerForm" onsubmit=" return validateRegisterForm()">
                                @Html.AntiForgeryToken()
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label for="fname"><b>First Name</b></label>
                                            <input class="form-control" type="text" placeholder="Enter First Name" maxlength="25" id="fname" name="FirstName" value="@Model.FirstName" oninput="validateText(this); validateName(this.id,'errFirstName')" required>
                                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger", id="errFirstName" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label for="mname"><b>Middle Name</b></label>
                                            <input class="form-control" type="text" placeholder="Enter Middle Name" id="mname" name="MiddleName" oninput="validateText(this)" value="@Model.MiddleName" maxlength="25">
                                            @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label for="lname"><b>Last Name</b></label>
                                            <input class="form-control" type="text" placeholder="Enter Last Name" name="LastName" id="lname" oninput="validateText(this); validateName(this.id,'errLastName')" value="@Model.LastName" maxlength="25" required>
                                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger", id = "errLastName" })

                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label for="cnic"><b>CNIC</b></label>
                                            <input class="form-control cnic" type="tel" placeholder="Enter CNIC" id="cnic" name="cnic" onchange="checkCNIC(this.id);" value="@Model.CNIC" maxlength="15" required>
                                            @Html.ValidationMessageFor(model => model.CNIC, "", new { @class = "text-danger", id = "cnicError" })
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label for="number"><b>Phone Number</b></label>
                                            <input class="form-control number" type="tel" placeholder="Enter Phone Number" id="number" onchange="checkPhoneNumber(this.id);" value="@Model.CellPhoneNumber" name="CellPhoneNumber" maxlength="12" required>
                                            @Html.ValidationMessageFor(model => model.CellPhoneNumber, "", new { @class = "text-danger", id = "numberError" })
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label for="email"><b>Email</b></label>
                                            <input class="form-control" type="email" placeholder="Enter Email" name="EmailAddress" id="email" onchange="checkEmail(this.id);" value="@Model.EmailAddress" required>
                                            @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger", id = "emailError" })

                                        </div>
                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label for="password"><b>Password</b></label>
                                            <input class="form-control" type="password" placeholder="**************" name="Password" id="password" maxlength="25" minlength="6" oninput="validatePassword('password','cpassword')" required>
                                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger", id = "passwordError" })
                                        </div>

                                    </div>
                                    <div class="col-md-4">
                                        <div class="form-group">
                                            <label for="cpassword"><b> Confirm Password</b></label>
                                            <input class="form-control" type="password" placeholder="**************" name="ConfirmPassword" id="cpassword" maxlength="25" minlength="6" oninput="validatePassword('password','cpassword')" required>
                                            @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger", id = "cpasswordError" })
                                        </div>
                                    </div>
                                </div>
                                <div id="divError">
                                    <p style="color:red;" id="error"></p>
                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <button class="savebtn global-btn-purple  float-right" type="submit">Register</button>
                                        </div>
                                    </div>
                                </div>
                                <p>Already have an account? <a href="@Url.Action("Login","Account")">Sign In</a>.</p>

                            </form>
                        </div>
                    </div>
                </div>
                <div class="row m-0 justify-content-end">
                    <div class="col-lg-6 p-0 justify-content-flex-end">
                        <p class="loginFooter">© Habib University <span>|</span> Powered by <a href="#" class="hoverUnderLine">HUIT</a> (ISO 27001 Certified)</p>
                    </div>
                </div>
            </div>
        </section>
    </div>
</div>
        <script>
    // Get the modal
    if ('@ViewBag.Result' !== "")
{
    ShowDivError('@ViewBag.Result');
    }
    
        </script>
